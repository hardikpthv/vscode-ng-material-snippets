{
  "matAutoComplete": {
    "prefix": "a-md-auto-complete",
    "body": [
      "<mat-autocomplete role=\"combobox\" #auto=\"matAutocomplete\">",
      "\t<mat-option *ngFor=\"let ${2:item} of ${1:list} | async \" [value]=\"${2:item}\">",
      "\t\t<span>{{${2:item}}}</span>",
      "\t</mat-option>",
      "</mat-autocomplete>"
    ],
    "description": "<mat-autocomplete> control with ngFor"
  },
  "matBadge": {
    "prefix": "a-md-badge",
    "body": [
      "matBadge=\"${1:value}\" matBadgePosition=\"${2:postion}\" matBadeColor=\"${3:color}\"",
      "matBadgeSize=\"${4:size}\" matBadgeOverlap=\"${5:overlap}\" matBadgeHidden=\"${6:hidden}\""
    ],
    "description": "matBadge with all configutration"
  },
  "matBadgeButton": {
    "prefix": "a-md-badge-button",
    "body": [
      "<button mat-raised-button color=\"primary\"",
      "\t\tmatBadge=\"${1:value}\" matBadgePosition=\"${2:postion}\"",
      "\t\tmatBadeColor=\"${3:color}\">${4:title}",
      "</button>"
    ],
    "description": "matBadge on button control"
  },
  "matButton": {
    "prefix": "a-md-button",
    "body": ["<button mat-button>${1:value}</button>"],
    "description": "mat-button control"
  },
  "matButtonLink": {
    "prefix": "a-md-button-link",
    "body": ["<button mat-button routerLink=\"${2:link}\">${1:value}</button>"],
    "description": "mat-button control with routerLink"
  },
  "matButtonRaised": {
    "prefix": "a-md-raised-button",
    "body": ["<button mat-raised-button>${1:value}</button>"],
    "description": "mat-raised-button control"
  },
  "matButtonToggles": {
    "prefix": "a-md-button-toggles",
    "body": [
      "<mat-button-toggle-group aria-label=\"${1:label}\">",
      "\t<mat-button-toggle value=\"${2:value}\">${2:value}</mat-button-toggle>",
      "</mat-button-toggle-group>"
    ],
    "description": "mat-button-toggle-group control"
  },
  "matButtonWithIcon": {
    "prefix": "a-md-icon-button",
    "body": [
      "<button mat-icon-button>",
      "\t<mat-icon aria-label=\"${2:label}\">${1:icon}</mat-icon>",
      "</button>"
    ],
    "description": "mat-icon-button control"
  },
  "matCard": {
    "prefix": "a-md-card",
    "body": [
      "<mat-card>",
      "\t<mat-card-header>",
      "\t\t<div mat-card-avatar>${1:avatar}</div>",
      "\t\t<mat-card-title>${2:title}</mat-card-title>",
      "\t\t<mat-card-subtitle>${3:sub-header}</mat-card-subtitle>",
      "\t</mat-card-header>",
      "\t<mat-card-content>",
      "\t\t${4:content}",
      "\t</mat-card-content>",
      "\t<mat-card-actions>",
      "\t\t<button mat-button>${5:actionOne}</button>",
      "\t\t<button mat-button>${6:actionTwo}</button>",
      "\t\t</mat-card-actions>",
      "</mat-card>"
    ],
    "description": "<mat-card> control, Basic card"
  },
  "matCardSimple": {
    "prefix": "a-md-card-simple",
    "body": ["<mat-card>", "\t${1:content}", "</mat-card>"],
    "description": "<mat-card> control, Simple card"
  },
  "matCheckboxNg": {
    "prefix": "a-md-checkbox",
    "body": [
      "<mat-checkbox [(ngModel)]=\"${1:model}\">Check me!</mat-checkbox>"
    ],
    "description": "<mat-checkbox> control with ngModel"
  },
  "matCheckboxFc": {
    "prefix": "a-md-checkbox-fc",
    "body": [
      "<mat-checkbox formControlName=\"${1:model}\">Check me!</mat-checkbox>"
    ],
    "description": "<mat-checkbox> control with formControlName"
  },
  "matDatepicker": {
    "prefix": "a-md-datepicker",
    "body": [
      "<mat-form-field>",
      "\t<input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\">",
      "\t<mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>",
      "\t<mat-datepicker #picker></mat-datepicker>",
      "</mat-form-field>"
    ],
    "description": "<mat-datepicker> control"
  },
  "matDivider": {
    "prefix": "a-md-divider",
    "body": ["<mat-divider></mat-divider"],
    "description": "mat-divider control"
  },
  "matDividerInset": {
    "prefix": "a-md-inset-divider",
    "body": ["<mat-divider [inset]=\"true\"></mat-divider"],
    "description": "mat-divider control configured inset"
  },
  "matExpansionPanel": {
    "prefix": "a-md-ex-panel",
    "body": [
      "<mat-expansion-panel>",
      "\t<mat-expansion-panel-header>",
      "\t\t<mat-panel-title>",
      "\t\t\t${1:title}",
      "\t\t</mat-panel-title>",
      "\t\t<mat-panel-description>",
      "\t\t\t${2:description}",
      "\t\t</mat-panel-description>",
      "\t</mat-expansion-panel-header>",
      "\t${3:panel-content}",
      "</mat-expansion-panel>"
    ],
    "description": "<mat-expansion-panel> control for expandable details-summary view"
  },
  "matFab": {
    "prefix": "a-md-fab",
    "body": [
      "<button mat-fab>",
      "\t<mat-icon aria-label=\"${2:label}\">${1:icon}</mat-icon>",
      "</button>"
    ],
    "description": "mat-fab control"
  },
  "matFabMini": {
    "prefix": "a-md-fab-mini",
    "body": [
      "<button mat-mini-fab>",
      "\t<mat-icon aria-label=\"${2:label}\">${1:icon}</mat-icon>",
      "</button>"
    ],
    "description": "mat-mini-fab control"
  },
  "matGrid": {
    "prefix": "a-md-grid",
    "body": [
      "<mat-grid-list cols=\"${1:col}\" rowHeight=\"${2:column-width}:${3:row-height}\">",
      "\t<mat-grid-tile>1</mat-grid-tile>",
      "\t<mat-grid-tile>2</mat-grid-tile>",
      "\t<mat-grid-tile>3</mat-grid-tile>",
      "\t<mat-grid-tile>4</mat-grid-tile>",
      "</mat-grid-list>"
    ],
    "description": "<mat-grid-list> control for grid-based layout"
  },
  "matGridTile": {
    "prefix": "a-md-grid-tile",
    "body": ["<mat-grid-tile>${1:content}</mat-grid-tile>"],
    "description": "<mat-grid-tile> Grid tile for <mat-grid-list> control"
  },
  "matInput": {
    "prefix": "a-md-input",
    "body": [
      "<mat-form-field>",
      "\t<input matInput placeholder=\"${1:placeholder}\">",
      "</mat-form-field>"
    ],
    "description": "matInput control"
  },
  "matInputError": {
    "prefix": "a-md-input-err",
    "body": ["<mat-error>", "\t${1:errMsg}", "</mat-error>"],
    "description": "mat-error control for matInput"
  },
  "matInputwithIcon": {
    "prefix": "a-md-input-icon",
    "body": [
      "<mat-form-field>",
      "\t<input matInput placeholder=\"${1:placeHolder}\">",
      "\t<mat-icon matSuffix>${2:icon}</mat-icon>",
      "</mat-form-field>"
    ],
    "description": "matInput control wtih icon suffixed"
  },
  "matInputNgModel": {
    "prefix": "a-md-input-ngModel",
    "body": [
      "<mat-form-field>",
      "\t<input matInput [(ngModel)]=\"${2:model}\" placeholder=\"${1:placeHolder}\">",
      "</mat-form-field>"
    ],
    "description": "matInput control with ngModel"
  },
  "matInputFc": {
    "prefix": "a-md-input-fc",
    "body": [
      "<mat-form-field>",
      "\t<input matInput formControlName=\"${2:control}\" placeholder=\"${1:placeHolder}\">",
      "</mat-form-field>"
    ],
    "description": "matInput control with formControlName"
  },
  "matMenu": {
    "prefix": "a-md-menu",
    "body": [
      "<button mat-button [matMenuTriggerFor]=\"menu\">Open</button>",
      "<mat-menu #menu=\"matMenu\">",
      "\t<button mat-menu-item>${1:item1}</button>",
      "\t<button mat-menu-item>${2:item2}</button>",
      "</mat-menu>"
    ],
    "description": "<mat-menu> with default items."
  },
  "matMenuWithIcon": {
    "prefix": "a-md-menu-with-icon",
    "body": [
      "<button mat-icon-button [matMenuTriggerFor]=\"menu\">",
      "\t<mat-icon>more_vert</mat-icon>",
      "</button>",
      "<mat-menu #menu=\"matMenu\">",
      "\t<button mat-menu-item>",
      "\t\t<mat-icon>dialpad</mat-icon>",
      "\t\t<span>Redial</span>",
      "\t</button>",
      "</mat-menu>"
    ],
    "description": "<mat-menu> with default items with icon."
  },
  "matMenuNested": {
    "prefix": "a-md-menu-nested",
    "body": [
      "<button mat-button [matMenuTriggerFor]=\"season\">Seasons</button>",
      "<mat-menu #season=\"matMenu\">",
      "\t<button mat-menu-item [matMenuTriggerFor]=\"got\">Game of throne</button>",
      "\t<button mat-menu-item [matMenuTriggerFor]=\"siliconValley\">Silicon Valley</button>",
      "</mat-menu>",
      "\n<mat-menu #got=\"matMenu\">",
      "\t<button mat-menu-item [matMenuTriggerFor]=\"seasonOne\">Season 1</button>",
      "\t<button mat-menu-item>Season 2</button>",
      "\t<button mat-menu-item>Season 3</button>",
      "\t<button mat-menu-item>Season 4</button>",
      "\t<button mat-menu-item>Season 5</button>",
      "\t<button mat-menu-item>Season 6</button>",
      "\t<button mat-menu-item>Season 7</button>",
      "</mat-menu>",
      "\n<mat-menu #seasonOne=\"matMenu\">",
      "\t<button mat-menu-item>Winter Is Coming</button>",
      "\t<button mat-menu-item>The Kingsroad</button>",
      "\t<button mat-menu-item>Lord Snow</button>",
      "\t<button mat-menu-item>Cripples, Bastards, and Broken Things</button>",
      "</mat-menu>"
    ],
    "description": "Nested <mat-menu> with default items"
  },
  "matPaginator": {
    "prefix": "a-md-paginator",
    "body": [
      "<mat-paginator [length]=\"${1:length}\"",
      "\t\t\t[pageSize]=\"${2:size}\"",
      "\t\t\t[pageSizeOptions]=\"[5, 10, 25, 100]\">",
      "</mat-paginator>"
    ],
    "description": "<mat-paginator> control for pagination"
  },
  "matProgressBar": {
    "prefix": "a-md-progress-bar",
    "body": ["<mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>"],
    "description": "<mat-progress-bar> control with indeterminate mode. It could be 'indeterminate', 'determinate', 'buffer' or 'query'."
  },
  "matProgressSpinner": {
    "prefix": "a-md-progress-spinner",
    "body": [
      "<mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>"
    ],
    "description": "<mat-progress-spinner> control with indeterminate mode. It could be 'indeterminate' or 'determinate'."
  },
  "matRadio": {
    "prefix": "a-md-radio",
    "body": [
      "<mat-radio-group>",
      "\t<mat-radio-button value=\"${1:val}\">${1:val}</mat-radio-button>",
      "\t<mat-radio-button value=\"${2:val}\">${2:val}</mat-radio-button>",
      "</mat-radio-group>"
    ],
    "description": "<mat-radio-group> control with default <mat-radio-button>"
  },
  "matRadioBtn": {
    "prefix": "a-md-radio-btn",
    "body": [
      "\t<mat-radio-button value=\"${1:val}\">${1:val}</mat-radio-button>"
    ],
    "description": "<mat-radio-button> button"
  },
  "matSelect": {
    "prefix": "a-md-select",
    "body": [
      "<mat-select placeholder=\"${1:placeholder}\">",
      "\t<mat-option [value]=\"'${2:val}'\">{{${2:val}}}</mat-option>",
      "</mat-select>"
    ],
    "description": "<mat-select> control"
  },
  "matSelectOption": {
    "prefix": "a-md-select-option",
    "body": ["\t<mat-option [value]=\"${1:val}\">{{${1:val}}}</mat-option>"],
    "description": "<mat-option> for <mat-select>"
  },
  "matSelectWithNgModel": {
    "prefix": "a-md-select-ngModel",
    "body": [
      "<mat-select placeholder=\"${1:placeholder}\" [(ngModel)]=\"${2:model}\" name=\"${1}\">",
      "\t<mat-option *ngFor=\"let ${4:item} of ${3:list} \" [value]=\"${4}\">{{${4}}}</mat-option>",
      "</mat-select>"
    ],
    "description": "<mat-select> control with ngModel"
  },
  "matSelectWithFc": {
    "prefix": "a-md-select-fc",
    "body": [
      "<mat-select placeholder=\"${1:placeholder}\" formControlName=\"${2:contorl}\">",
      "\t<mat-option *ngFor=\"let ${4:item} of ${3:list} \" [value]=\"${4:item}\">{{${4:item}}}</mat-option>",
      "</mat-select>"
    ],
    "description": "<mat-select> control with formControlName"
  },
  "matSlider": {
    "prefix": "a-md-slider",
    "body": ["<mat-slider></mat-slider>"],
    "description": "<mat-slider> control default horizontal"
  },
  "matSliderVertical": {
    "prefix": "a-md-slider-vertical",
    "body": ["<mat-slider [vertical]=\"true\"></mat-slider>"],
    "description": "<mat-slider> control vertical"
  },
  "matSwitch": {
    "prefix": "a-md-switch",
    "body": ["<mat-slide-toggle>Slide me!</mat-slide-toggle>"],
    "description": "Switch<mat-slide-toggle> control"
  },
  "matSidenav": {
    "prefix": "a-md-sidenav",
    "body": [
      "<mat-sidenav-container fullscreen>",
      "\t<mat-sidenav #sidenav class=\"mat-elevation-z4\" mode=\"side\" opened=\"true\">",
      "\t\t<mat-nav-list>",
      "\t\t\t<mat-list-item *ngFor=\"let ${2:item} of ${1:list} \" >",
      "\t\t\t\t<mat-icon matListIcon>{{${2:item}}}</mat-icon>",
      "\t\t\t\t<h3 matLine>{{${2:item}}}</h3>",
      "\t\t\t</mat-list-item>",
      "\t\t</mat-nav-list>",
      "\t</mat-sidenav>",
      "\t<div class=\"container\">",
      "\t</div>",
      "</mat-sidenav-container>"
    ],
    "description": "<mat-sidenav> control with ngFor to iterate through nav items"
  },
  "matToolbar": {
    "prefix": "a-md-toolbar",
    "body": [
      "<mat-toolbar color=\"primary\" class=\"mat-elevation-z6\">",
      "\t<span>${1:title}</span>",
      "</mat-toolbar>"
    ],
    "description": "Toolbar with primary color as default"
  },
  "matTab": {
    "prefix": "a-md-tab",
    "body": [
      "<mat-tab-group>",
      "\t<mat-tab label=\"Tab 1\">Content 1</mat-tab>",
      "\t<mat-tab label=\"Tab 2\">Content 2</mat-tab>",
      "</mat-tab-group>"
    ],
    "description": "<mat-tab> control with set of two tabs"
  },
  "matTooltip": {
    "prefix": "a-md-tooltip",
    "body": ["<span matTooltip=\"${1:text}\">Hover me to view tooltip</span>"],
    "description": "matTooltip directive to display tooltip"
  },
  "matTooltipPosition": {
    "prefix": "a-md-tooltip-position",
    "body": ["matTooltipPosition=\"${1:position}\""],
    "description": "matTooltipPosition directive to set position"
  },
  "matList": {
    "prefix": "a-md-list",
    "body": [
      "<mat-list role=\"list\">",
      "\t<mat-list-item role=\"listitem\">${1:item1}</mat-list-item>",
      "\t<mat-list-item role=\"listitem\">${2:item2}</mat-list-item>",
      "</mat-list>"
    ],
    "description": "<mat-list> control with default <mat-list-item>"
  },
  "matListItem": {
    "prefix": "a-md-list-item",
    "body": ["<mat-list-item role=\"listitem\">${1:item1}</mat-list-item>"],
    "description": "<mat-list-item> control"
  },
  "matSelectionList": {
    "prefix": "a-md-selection-list",
    "body": [
      "<mat-selection-list  role=\"listbox\">",
      "\t<mat-list-option role=\"option\">${1:option1}</mat-list-option>",
      "\t<mat-list-option role=\"option\">${2:option2}</mat-list-option>",
      "</mat-selection-list>"
    ],
    "description": "<mat-selection-list> control"
  },
  "matListOption": {
    "prefix": "a-md-list-option",
    "body": ["<mat-list-option  role=\"option\">${1:item1}</mat-list-option>"],
    "description": "<mat-list-option> control"
  },
  "matListWithIcon": {
    "prefix": "a-md-icon-list",
    "body": [
      "<mat-list role=\"list\">",
      "\t<mat-list-item role=\"listitem\">${1:item1}",
      "\t\t<mat-icon matListIcon>${2:icon}</mat-icon>",
      "\t\t<h3 matLine> ${2:heading} </h3>",
      "\t\t<p matLine>${3:content}</p>",
      "\t</mat-list-item>",
      "</mat-list>"
    ],
    "description": "<mat-list> control with icon"
  },
  "matRipple": {
    "prefix": "a-md-ripple",
    "body": ["matRipple [matRippleColor]=\"${1:color}\""],
    "description": "matRipple and matRippleColor directives"
  },
  "matRippleContainer": {
    "prefix": "a-md-ripple-container",
    "body": ["<div matRipple [matRippleColor]=\"${1:color}\">", "\t", "</div>"],
    "description": "Ripple container"
  },
  "matHorizontalStepper": {
    "prefix": "a-md-stepper",
    "body": [
      "<mat-horizontal-stepper [linear]=\"${1:isLinear}\" #stepper>",
      "\t<mat-step [stepControl]=\"${2:formGroup}\">",
      "\t\t<form></form>",
      "\t\t<div>",
      "\t\t\t<button mat-button matStepperNext>Next</button>",
      "\t\t</div>",
      "\t</mat-step>",
      "</mat-horizontal-stepper>"
    ],
    "description": "<mat-horizontal-stepper> control"
  },
  "matHorizontalStep": {
    "prefix": "a-md-step",
    "body": [
      "<mat-step [stepControl]=\"${1:formGroup}\">",
      "\t<form></form>",
      "\t<div>",
      "\t\t<button mat-button matStepperPrevious>Back</button>",
      "\t\t<button mat-button matStepperNext>Next</button>",
      "\t</div>",
      "</mat-step>"
    ],
    "description": "<mat-step> control"
  },
  "matTree": {
    "prefix": "a-md-tree",
    "body": [
      "<mat-tree>",
      "\t<mat-tree-node>${1:parent}</mat-tree-node>",
      "\t<mat-tree-node> -- ${2:child}</mat-tree-node>",
      "</mat-tree>"
    ],
    "description": "<mat-tree> control"
  },
  "matTreeNode": {
    "prefix": "a-md-tree-node",
    "body": ["<mat-tree-node>${1:value}</mat-tree-node>"],
    "description": "<mat-tree-node> control"
  },
  "matTreeNestedNode": {
    "prefix": "a-md-tree-nested-node",
    "body": ["<mat-nested-tree-node>${1:value}</mat-nested-tree-node>"],
    "description": "<mat-nested-tree-node> control"
  },
  "matChips": {
    "prefix": "a-md-chips",
    "body": [
      "<mat-chip-list>",
      "\t<mat-chip>${1:val1}</mat-chip>",
      "\t<mat-chip>${2:val2}</mat-chip>",
      "</mat-chip-list>"
    ],
    "description": "<mat-chip-list> control with <mat-chip>"
  },
  "matChip": {
    "prefix": "a-md-chip",
    "body": ["<mat-chip>${1:val}</mat-chip>"],
    "description": "<mat-chip> control for <mat-chip-list>"
  },
  "matTable": {
    "prefix": "a-md-data-table",
    "body": [
      "<mat-table [dataSource]=\"${1:dataSource}\">",
      "\t<ng-container matColumnDef=\"${2:columnName}\">",
      "\t\t<mat-header-cell *matHeaderCellDef> ${3:columnHeaderLabel}",
      "\t\t</mat-header-cell>",
      "\t\t<mat-cell *matCellDef=\"let element\"> {{element.${4:propertyName}}} </mat-cell>",
      "\t</ng-container>\n",
      "\t${5:a-md-data-table-column}",
      "\t<!-- press ctrl + space to add more column snippet or delete this line -->\n",
      "\t<mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>",
      "\t<mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>",
      "</mat-table>"
    ],
    "description": "<mat-table> control"
  },
  "matTableColumn": {
    "prefix": "a-md-data-table-column",
    "body": [
      "<ng-container matColumnDef=\"${1:columnName}\">",
      "\t<mat-header-cell *matHeaderCellDef> ${2:columnHeaderLabel}</mat-header-cell>",
      "\t<mat-cell *matCellDef=\"let element\"> {{element.${3:propertyName}}} </mat-cell>",
      "</ng-container>\n",
      "${4:a-md-data-table-column}",
      "<!-- press ctrl + space to add more column snippet or delete this line -->\n"
    ],
    "description": "<mat-header-cell> column for </mat-table> control "
  },
  "matIcon": {
    "prefix": "a-md-icon",
    "body": [
      "<mat-icon aria-hidden=\"false\" aria-label=\"{2:label} icon\">${1:icon}</mat-icon>"
    ],
    "description": "mat-icon control"
  },
  "matSort": {
    "prefix": "a-md-sort",
    "body": ["matSort (matSortChange)=\"${1:methodName}($event)\""],
    "description": "matSort directive with matSortChange event"
  },
  "cdkTree": {
    "prefix": "a-md-tree",
    "body": [
      "<cdk-tree [dataSource]=\"${1:dataSource}\" [treeControl]=\"${2:treeControl}\">",
      "\t<cdk-tree-node",
      "\t\t*cdkTreeNodeDef=\"let node;\"",
      "\t\tcdkTreeNodePadding",
      "\t\t[style.display]=\"${4:logic}\"",
      "\t>",
      "\t\t<button mat-icon-button disabled></button>",
      "\t\t{{node.name}}",
      "\t</cdk-tree-node>",
      "\t<cdk-tree-node",
      "\t\t*cdkTreeNodeDef=\"let node; when: hasChild\"",
      "\t\tcdkTreeNodePadding",
      "\t\t[style.display]=\"${4:logic}\"",
      "\t>",
      "\t\t<button",
      "\t\t\tmat-icon-button",
      "\t\t\tcdkTreeNodeToggle",
      "\t\t\t[attr.aria-label]=\"'Toggle ' + node.name\"",
      "\t\t\t(click)=\"node.isExpanded = !node.isExpanded\"",
      "\t\t\t[style.visibility]=\"node.expandable ? 'visible' : 'hidden'\"",
      "\t\t>",
      "\t\t\t<mat-icon class=\"mat-icon-rtl-mirror\">",
      "\t\t\t\t{{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}",
      "\t\t\t</mat-icon>",
      "\t\t</button>",
      "\t\t{{node.name}}",
      "\t</cdk-tree-node>",
      "</cdk-tree>"
    ],
    "description": "<cdk-tree> control"
  }
}
